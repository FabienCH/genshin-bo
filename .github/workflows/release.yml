name: Build & Deploy Release

on:
  push:
    branches: [ cicd/* ]
  release:
    types: [published]

jobs:     
  build-and-deploy:
    name:  build and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1

      - name: Build
        run: |
          npm install
          npm run build:prod

      - name: Deploy ðŸš€
        run: |
          wget https://releases.hashicorp.com/packer/1.3.1/packer_1.3.1_linux_amd64.zip
          unzip packer_1.3.1_linux_amd64.zip
          sudo apt-get -y update
          sudo apt-get -y install jq
          sudo apt-get -y install python-dev python3-pip
          pip install --upgrade pip
          pip install python-openstackclient
          export OS_AUTH_URL=${{secrets.OS_AUTH_URL}}
          export OS_USERNAME=${{secrets.OS_USERNAME}}
          export OS_PASSWORD=${{secrets.OS_PASSWORD}}
          export OS_TENANT_ID=${{secrets.OS_TENANT_ID}}
          export OS_TENANT_NAME=${{secrets.OS_TENANT_NAME}}
          source deploy/openrc.sh
          export SOURCE_ID=`openstack image list -f json | jq -r '.[] | select(.Name == "Debian 10") | .ID'`
          export FLAVOR_ID=`openstack flavor list -f json | jq -r '.[] | select(.Name == "d2-2") | .ID'`
          export NETWORK_ID=`openstack network list -f json | jq -r '.[] | select(.Name == "Ext-Net") | .ID'`
          export RELEASE_VER=${GITHUB_REF##*/}
          chmod +x deploy/build-packer-json.sh
          ./deploy/build-packer-json.sh
          ./packer build packer.json
          IMAGE_ID=`openstack image list -f json | jq -r --arg RELEASE_VER "${GITHUB_REF##*/}" 'last(.[] | select(.Name == "genshin-bo/" + $RELEASE_VER)) | .ID'`
          openstack server rebuild --image $IMAGE_ID genshin-bo-front

